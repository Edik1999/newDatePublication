{"version":3,"sources":["components/DateTime.js","components/Video.js","components/VideoList.js","App.js","reportWebVitals.js","index.js"],"names":["DateTime","date","text","className","Video","props","useState","moment","timeNow","setTimeNow","useEffect","interval","setInterval","clearInterval","Component","validateTime","time","count","UpgDateTime","minutes","loadTime","Number","toFixed","hours","day","src","url","frameBorder","allow","allowFullScreen","title","VideoList","list","map","item","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAQeA,MANf,YAAiC,IAAdC,EAAa,EAAbA,KAAMC,EAAO,EAAPA,KACrB,OACI,oBAAGC,UAAU,OAAb,UAAqBF,EAAMC,M,gBCsGpBE,MAtGf,SAAeC,GAEX,MAA8BC,mBAASC,OAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACN,IAAIC,EAAWC,aAAY,WACvBH,EAAWF,SACZ,KACH,OAAO,WACHM,cAAcF,MAEnB,CAACH,IAEJ,IAUwBM,EAVlBC,EAAe,SAACC,GAClB,IAAIC,EAMJ,OALID,EAAO,KAAO,GAAKA,EAAO,MAAQ,GAClCC,EAAQ,GACAD,GAAQ,GAAKA,GAAQ,GAAOA,GAAQ,IAAMA,GAAQ,IAAQA,GAAQ,IAAMA,GAAQ,MACxFC,EAAQ,GAELA,GAwELC,GArEkBJ,EAqEWd,EAnE/B,SAAiBK,GAEb,IAGIc,EAHEC,EAAWb,IAAOF,EAAMJ,MAE1Be,EAAOK,SADGb,EAAUY,GACK,IAAO,IAAIE,QAAQ,IAGhD,OAAQP,EAAaC,IACjB,KAAK,EACDG,EAAU,uCACV,MACJ,KAAK,EACDA,EAAU,uCACV,MACJ,QACIA,EAAU,iCAIlB,IAAIjB,EAAI,WAAOiB,EAAP,mCAER,GAAIH,EAAO,IAAMA,EAAO,KAAM,CAI1B,IAAIO,EAEJ,OAJAP,GAAQA,EAAO,IAAIM,QAAQ,GAInBP,EAAaC,IACjB,KAAK,EACDO,EAAQ,qBACR,MACJ,KAAK,EACDA,EAAQ,2BACR,MACJ,QACIA,EAAQ,iCAIhBrB,EAAI,WAAOqB,EAAP,wCAED,GAAIP,GAAQ,KAAM,CAIrB,IAAIQ,EAEJ,OAJAR,GAAQA,EAAO,GAAK,IAAIM,QAAQ,GAIxBP,EAAaC,IACjB,KAAK,EACDQ,EAAM,2BACN,MACJ,KAAK,EACDA,EAAM,qBACN,MACJ,QACIA,EAAM,2BAIdtB,EAAI,WAAOsB,EAAP,mCAGR,OAAO,cAACV,EAAD,2BAAeT,GAAf,IAAsBJ,KAAMe,EAAMd,KAAMA,OAOvD,OACI,sBAAKC,UAAU,QAAf,UACI,wBAAQsB,IAAKpB,EAAMqB,IAAKC,YAAY,IAAIC,MAAM,4BAA4BC,iBAAe,EAACC,MAAOzB,EAAMqB,MACvG,cAACR,EAAD,CAAajB,KAAMI,EAAMJ,WC9FtB8B,EAJG,SAAC1B,GACf,OAAOA,EAAM2B,KAAKC,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAsBR,IAAKQ,EAAKR,IAAKzB,KAAMiC,EAAKjC,MAApCiC,EAAKR,SCApC,SAASS,IA4BpB,OACI,cAAC,EAAD,CAAWH,KA5BF,CACT,CACIN,IAAK,gFACLzB,KAAM,uBAEV,CACIyB,IAAK,gFACLzB,KAAM,uBAEV,CACIyB,IAAK,gFACLzB,KAAM,uBAEV,CACIyB,IAAK,gFACLzB,KAAM,uBAEV,CACIyB,IAAK,gFACLzB,KAAM,uBAEV,CACIyB,IAAK,gFACLzB,KAAM,0BC5BlB,IAYemC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.aa2fecbc.chunk.js","sourcesContent":["import React from 'react';\n\nfunction DateTime({date, text}) {\n    return (\n        <p className=\"date\">{date}{text}</p>\n    )\n}\n\nexport default DateTime;\n","import React, { useEffect, useState } from 'react';\nimport DateTime from './DateTime'\nimport moment from 'moment';\n\nfunction Video(props) {\n\n    const [timeNow, setTimeNow] = useState(moment());\n\n    useEffect(() => {\n        let interval = setInterval(() => {\n            setTimeNow(moment())\n        }, 60000);\n        return () => {\n            clearInterval(interval)\n        };\n    }, [timeNow]);\n\n    const validateTime = (time) => {\n        let count\n        if (time % 10 === 1 && time % 100 !== 11) {\n            count = 1\n        } else if ((time >= 2 && time <= 4) || (time >= 22 && time <= 24) || (time >= 32 && time <= 34)) {\n            count = 2\n        }\n        return count\n    }\n\n    const DateTimePretty = (Component) => {\n\n        function Wrapper(props) {\n\n            const loadTime = moment(props.date),\n                fromNow = timeNow - loadTime\n            let time = Number((fromNow / 1000 / 60).toFixed(0)),\n                minutes;\n\n            switch (validateTime(time)) {\n                case 1:\n                    minutes = 'минуту'\n                    break\n                case 2:\n                    minutes = 'минуты'\n                    break\n                default:\n                    minutes = 'минут'\n                    break\n            }\n\n            let text = ` ${minutes} назад`\n\n            if (time > 60 && time < 1440) {\n\n                time = (time / 60).toFixed(0);\n\n                let hours;\n\n                switch (validateTime(time)) {\n                    case 1:\n                        hours = 'час'\n                        break\n                    case 2:\n                        hours = 'часа'\n                        break\n                    default:\n                        hours = 'часов'\n                        break\n                }\n\n                text = ` ${hours} назад`\n\n            } else if (time >= 1440) {\n\n                time = (time / 60 / 24).toFixed(0);\n\n                let day;\n\n                switch (validateTime(time)) {\n                    case 1:\n                        day = 'день'\n                        break\n                    case 2:\n                        day = 'дня'\n                        break\n                    default:\n                        day = 'дней'\n                        break\n                }\n\n                text = ` ${day} назад`\n            }\n\n            return <Component {...props} date={time} text={text} />;\n        }\n        return Wrapper;\n    }\n\n    const UpgDateTime = DateTimePretty(DateTime);\n\n    return (\n        <div className=\"video\">\n            <iframe src={props.url} frameBorder=\"0\" allow=\"autoplay; encrypted-media\" allowFullScreen title={props.url}></iframe>\n            <UpgDateTime date={props.date} />\n        </div>\n    )\n}\n\nexport default Video;\n","import React from 'react';\nimport Video from './Video'\n\nconst VideoList = (props) => {\n    return props.list.map(item => <Video key={item.url} url={item.url} date={item.date} />);\n}\n\nexport default VideoList;\n","import React from 'react';\nimport './App.css';\nimport VideoList from './components/VideoList'\n\nexport default function App() {\n    const list = [\n        {\n            url: 'https://www.youtube.com/embed/rN6nlNC9WQA?rel=0&amp;controls=0&amp;showinfo=0',\n            date: '2021-11-22 13:24:00'\n        },\n        {\n            url: 'https://www.youtube.com/embed/dVkK36KOcqs?rel=0&amp;controls=0&amp;showinfo=0',\n            date: '2021-11-27 12:10:00'\n        },\n        {\n            url: 'https://www.youtube.com/embed/xGRjCa49C6U?rel=0&amp;controls=0&amp;showinfo=0',\n            date: '2021-11-26 23:16:00'\n        },\n        {\n            url: 'https://www.youtube.com/embed/RK1K2bCg4J8?rel=0&amp;controls=0&amp;showinfo=0',\n            date: '2021-11-26 12:10:00'\n        },\n        {\n            url: 'https://www.youtube.com/embed/TKmGU77INaM?rel=0&amp;controls=0&amp;showinfo=0',\n            date: '2021-11-27 20:39:00'\n        },\n        {\n            url: 'https://www.youtube.com/embed/TxbE79-1OSI?rel=0&amp;controls=0&amp;showinfo=0',\n            date: '2021-11-26 05:24:00'\n        },\n    ]\n\n    return (\n        <VideoList list={list} />\n    );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}